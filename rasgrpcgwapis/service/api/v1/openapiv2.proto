syntax = "proto3";

package service.api.v1;

import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/v8platform/ras-grpc-gw/pkg/gen/service/api/v1;service_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "RAS API";
    version: "1.0";
    description: "";
    contact: {
      name: "RAS gRPC-Gateway project";
      url: "https://github.com/v8platform/ras-grpc-gw";
      email: "khorevaa@gmail.com";
    };
    license: {
      name: "MIT License";
      url: "https://github.com/v8paltform/ras-grpc-gw/blob/master/LICENSE";
    };
  };
  host: "localhost:3001";
//  base_path: "/api";
  schemes: HTTP;
  schemes: HTTPS;
//  schemes: WS;
  consumes: "application/json";
  produces: "application/json";


  security_definitions: {
    security: {
      key: "AdminAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "authorization";
        extensions: {
          key: "x-default";
          value {
            string_value: "12312312";
          }
        }
      };
    };
    security: {
      key: "UserAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "authorization";
        extensions: {
          key: "x-default";
          value {
            string_value: "12312312";
          }
        }
      };
    };
  };
  security: {
    security_requirement: {
      key: "UserAuth";
      value: {};
    };
  };

  responses: {
    key: "403";
    value: {
      description: "User does not have permission to access the resource.";
    }
  }
  responses: {
    key: "404";
    value: {
      description: "Resource does not exist.";
      schema: {
        json_schema: {
          type: STRING;
        }
      }
    }
  }
  responses: {
    key: "500";
    value: {
      description: "Server error";
      headers: {
        key: "X-Correlation-Id"
        value: {
          description: "Unique event identifier for server requests"
          type: "string"
          format: "uuid"
          default: "\"2438ac3c-37eb-4902-adef-ed16b4431030\""
          pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$"
        }
      };
      schema: {
        json_schema: {
          ref: ".service.api.v1.ErrorResponse";
        }
      }
    }
  }
  responses: {
    key: "200";
    value: {
      description: "A successful response.";
      headers: {
        key: "X-App"
        value: {
          description: "Unique event identifier for server requests"
          type: "string"
          format: "uuid"
          default: "\"2438ac3c-37eb-4902-adef-ed16b4431030\""
          pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$"
        }
      };
      headers: {
        key: "X-Endpoint"
        value: {
          description: "Unique event identifier for server requests"
          type: "string"
          format: "uuid"
          default: "\"2438ac3c-37eb-4902-adef-ed16b4431030\""
          pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$"
        }
      };
    }
  }
};


message ErrorResponse{
  string correlationId = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$",
    title: "x-correlation-id",
    description: "Unique event identifier for server requests",
    format: "uuid",
    example: "\"2438ac3c-37eb-4902-adef-ed16b4431030\""
  }];
  ErrorObject error = 2;
}

message ErrorObject{
  int32 code = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    pattern: "^[0-9]$",
    title: "code",
    description: "Response code",
    format: "integer"
  }];
  string message = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    pattern: "^[a-zA-Z0-9]{1, 32}$",
    title: "message",
    description: "Response message"
  }];
}