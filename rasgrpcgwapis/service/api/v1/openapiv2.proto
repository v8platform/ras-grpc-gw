syntax = "proto3";

package service.api.v1;

import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/v8platform/ras-grpc-gw/pkg/gen/service/api/v1;service_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "RAS API";
    version: "1.0";
    description: "";
    contact: {
      name: "RAS gRPC-Gateway project";
      url: "https://github.com/v8platform/ras-grpc-gw";
      email: "khorevaa@gmail.com";
    };
    license: {
      name: "MIT License";
      url: "https://github.com/v8paltform/ras-grpc-gw/blob/master/LICENSE";
    };
  };
  host: "localhost:3001";
//  base_path: "/api";
  schemes: HTTP;
  schemes: HTTPS;
//  schemes: WS;
  consumes: "application/json";
  produces: "application/json";

  security_definitions: {
    security: {
      key: "AdminAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "authorization";
        extensions: {
          key: "x-default";
          value {
            string_value: "12312312";
          }
        }
      };
    };
    security: {
      key: "UserAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "authorization";
        extensions: {
          key: "x-default";
          value {
            string_value: "12312312";
          }
        }
      };
    };
    security: {
      key: "ClientAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "x-client";
        extensions: {
          key: "x-default";
          value {
            string_value: "12312312";
          }
        }
      };
    };
  };
  security: {
    security_requirement: {
      key: "UserAuth";
      value: {};
    };
    security_requirement: {
      key: "ClientAuth";
      value: {};
    };
  };
  extensions: {
    key: "x-something-something";
    value {
      string_value: "yadda";
    }
  }
};
