syntax = "proto3";

package service.api.v1;
import "google/protobuf/empty.proto";
import "ras/messages/v1/auth_messages.proto";
import "ras/messages/v1/sessions_messages.proto";
import "ras/messages/v1/infobases_messages.proto";
import "ras/messages/v1/clusters_messages.proto";

option go_package = "github.com/v8platform/ras-grpc-gw/pkg/gen/service/api/v1;service_v1";

service Service {

  // Auth
  rpc AuthenticateCluster(ras.messages.v1.ClusterAuthenticateRequest) returns (google.protobuf.Empty) {};
  rpc AuthenticateInfobase(ras.messages.v1.AuthenticateInfobaseRequest) returns (google.protobuf.Empty) {};
  rpc AuthenticateAgent(ras.messages.v1.AuthenticateAgentRequest) returns (google.protobuf.Empty) {};

  // Clusters
  rpc GetClusters(ras.messages.v1.GetClustersRequest) returns (ras.messages.v1.GetClustersResponse) {};
  rpc GetClusterInfo(ras.messages.v1.GetClusterInfoRequest) returns (ras.messages.v1.GetClusterInfoResponse) {};
  rpc RegCluster(ras.messages.v1.RegClusterRequest) returns (ras.messages.v1.RegClusterResponse) {};
  rpc UnregCluster(ras.messages.v1.UnregClusterRequest) returns (google.protobuf.Empty) {};

  // Sessions
  rpc GetSessions(ras.messages.v1.GetSessionsRequest) returns (ras.messages.v1.GetSessionsResponse) {};

  // infobases
  // GetInfobasesShortRequest
  rpc GetShortInfobases(ras.messages.v1.GetInfobasesShortRequest) returns (ras.messages.v1.GetInfobasesShortResponse) {};
  // GetInfobaseSessionsRequest
  rpc GetInfobaseSessions(ras.messages.v1.GetInfobaseSessionsRequest) returns (ras.messages.v1.GetInfobaseSessionsResponse) {};

}
