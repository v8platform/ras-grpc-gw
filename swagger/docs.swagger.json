{
  "swagger": "2.0",
  "info": {
    "title": "RAS API",
    "version": "1.0",
    "contact": {
      "name": "RAS gRPC-Gateway project",
      "url": "https://github.com/v8platform/ras-grpc-gw",
      "email": "khorevaa@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/v8paltform/ras-grpc-gw/blob/master/LICENSE"
    }
  },
  "tags": [
    {
      "name": "AuthService"
    },
    {
      "name": "ClientService"
    },
    {
      "name": "ClustersService"
    },
    {
      "name": "InfobasesService"
    },
    {
      "name": "Service"
    },
    {
      "name": "SessionsService"
    },
    {
      "name": "UsersService"
    }
  ],
  "host": "localhost:3001",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/login": {
      "post": {
        "summary": "Выполняет вход в систему и возвращает токены доступа",
        "description": "Вход в систему для пользователя",
        "operationId": "UsersService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/service.api.v1.Tokens"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/service.api.v1.LoginRequest"
            }
          }
        ],
        "tags": [
          "Access"
        ],
        "security": []
      }
    },
    "/clusters": {
      "get": {
        "summary": "Выполняет получение списка кластеров клиентая",
        "description": "Получение списка кластеров клиентая",
        "operationId": "ClustersService_GetClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ras.messages.v1.GetClustersResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/clusters/infobases": {
      "get": {
        "summary": "Выполняет получение списка информационных баз",
        "description": "Получение списка информационных баз",
        "operationId": "InfobasesService_GetShortInfobases",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ras.messages.v1.GetInfobasesShortResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Infobases"
        ]
      }
    },
    "/clusters/infobases/sessions": {
      "get": {
        "summary": "Выполняет получение списка сессий информационных баз",
        "description": "Получение списка сессий информационных баз",
        "operationId": "InfobasesService_GetInfobaseSessions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ras.messages.v1.GetInfobaseSessionsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infobaseId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Infobases",
          "Sessions"
        ]
      }
    },
    "/clusters/sessions": {
      "get": {
        "summary": "Выполняет получение списка кластеров клиентая",
        "description": "Получение списка кластеров клиентая",
        "operationId": "SessionsService_GetSessions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ras.messages.v1.GetSessionsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sessions"
        ]
      }
    },
    "/clusters/{clusterId}": {
      "get": {
        "summary": "Выполняет получение информации о кластере",
        "description": "Получение информации о кластере",
        "operationId": "ClustersService_GetClusterInfo",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v8platform.serialize.v1.ClusterInfo"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Clusters"
        ]
      }
    },
    "/clusters/{clusterId}/infobases": {
      "get": {
        "summary": "Выполняет получение списка информационных баз",
        "description": "Получение списка информационных баз",
        "operationId": "InfobasesService_GetShortInfobases2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ras.messages.v1.GetInfobasesShortResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Infobases"
        ]
      }
    },
    "/clusters/{clusterId}/infobases/{infobaseId}/sessions": {
      "get": {
        "summary": "Выполняет получение списка сессий информационных баз",
        "description": "Получение списка сессий информационных баз",
        "operationId": "InfobasesService_GetInfobaseSessions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ras.messages.v1.GetInfobaseSessionsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "infobaseId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Infobases",
          "Sessions"
        ]
      }
    },
    "/clusters/{clusterId}/sessions": {
      "get": {
        "summary": "Выполняет получение списка кластеров клиентая",
        "description": "Получение списка кластеров клиентая",
        "operationId": "SessionsService_GetSessions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ras.messages.v1.GetSessionsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Sessions"
        ]
      }
    },
    "/v1/refresh": {
      "post": {
        "summary": "Выполняет обновление токена доступа",
        "description": "Обновление токена доступа для пользователя",
        "operationId": "UsersService_Refresh",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/service.api.v1.Tokens"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/service.api.v1.RefreshRequest"
            }
          }
        ],
        "tags": [
          "Access"
        ],
        "security": [
          {
            "UserAuth": []
          }
        ]
      }
    },
    "/v1/users": {
      "post": {
        "summary": "Выполняет регистрацию нового пользователя в системе",
        "description": "Создает и регистрирует нового пользователя",
        "operationId": "UsersService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/service.api.v1.CreateUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "security": [
          {
            "AdminAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "ras.messages.v1.GetClusterInfoResponse": {
      "type": "object",
      "properties": {
        "clusterInfo": {
          "$ref": "#/definitions/v8platform.serialize.v1.ClusterInfo"
        }
      }
    },
    "ras.messages.v1.GetClustersResponse": {
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v8platform.serialize.v1.ClusterInfo"
          }
        }
      }
    },
    "ras.messages.v1.GetInfobaseSessionsResponse": {
      "type": "object",
      "properties": {
        "infobases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v8platform.serialize.v1.SessionInfo"
          }
        }
      }
    },
    "ras.messages.v1.GetInfobasesShortResponse": {
      "type": "object",
      "properties": {
        "sessions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v8platform.serialize.v1.InfobaseSummaryInfo"
          }
        }
      }
    },
    "ras.messages.v1.GetSessionsResponse": {
      "type": "object",
      "properties": {
        "sessions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v8platform.serialize.v1.SessionInfo"
          }
        }
      }
    },
    "ras.messages.v1.RegClusterResponse": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        }
      }
    },
    "service.api.v1.ClientInfo": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "idleTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "uuid": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "lastUsed": {
          "type": "string",
          "format": "date-time"
        },
        "idleAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "service.api.v1.CreateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "service.api.v1.GetClientsResponse": {
      "type": "object",
      "properties": {
        "clients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/service.api.v1.ClientInfo"
          }
        }
      }
    },
    "service.api.v1.LoginRequest": {
      "type": "object",
      "example": {
        "user": "admin",
        "password": "123"
      },
      "properties": {
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "LoginRequest",
      "required": [
        "user",
        "password"
      ]
    },
    "service.api.v1.RefreshRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "service.api.v1.RegisterResponse": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      }
    },
    "service.api.v1.Tokens": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "v8platform.serialize.v1.ClusterInfo": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "expirationTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "host": {
          "type": "string"
        },
        "lifetimeLimit": {
          "type": "integer",
          "format": "int32"
        },
        "Port": {
          "type": "integer",
          "format": "int32"
        },
        "maxMemorySize": {
          "type": "integer",
          "format": "int32"
        },
        "maxMemoryTimeLimit": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "securityLevel": {
          "type": "integer",
          "format": "int32"
        },
        "sessionFaultToleranceLevel": {
          "type": "integer",
          "format": "int32"
        },
        "loadBalancingMode": {
          "type": "integer",
          "format": "int32"
        },
        "errorsCountThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "killProblemProcesses": {
          "type": "boolean"
        },
        "killByMemoryWithDump": {
          "type": "boolean",
          "title": "version \u003e= 9"
        }
      }
    },
    "v8platform.serialize.v1.InfobaseSummaryInfo": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "all versions"
        },
        "descr": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v8platform.serialize.v1.LicenseInfo": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string",
          "title": "ignore\r\nneed fill"
        },
        "processId": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "fullName": {
          "type": "string",
          "title": "all version"
        },
        "fullPresentation": {
          "type": "string"
        },
        "issuedByServer": {
          "type": "boolean"
        },
        "licenseType": {
          "type": "integer",
          "format": "int32"
        },
        "maxUsersAll": {
          "type": "integer",
          "format": "int32"
        },
        "maxUsersCur": {
          "type": "integer",
          "format": "int32"
        },
        "net": {
          "type": "boolean"
        },
        "rmngrAddress": {
          "type": "string"
        },
        "rmngrPid": {
          "type": "string"
        },
        "rmngrPort": {
          "type": "integer",
          "format": "int32"
        },
        "series": {
          "type": "string"
        },
        "shortPresentation": {
          "type": "string"
        }
      }
    },
    "v8platform.serialize.v1.SessionInfo": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "blockedByDbms": {
          "type": "integer",
          "format": "int32"
        },
        "blockedByLs": {
          "type": "integer",
          "format": "int32"
        },
        "bytesAll": {
          "type": "string",
          "format": "int64"
        },
        "bytesLast5min": {
          "type": "string",
          "format": "int64"
        },
        "callsAll": {
          "type": "integer",
          "format": "int32"
        },
        "callsLast5min": {
          "type": "string",
          "format": "int64"
        },
        "connectionId": {
          "type": "string"
        },
        "dbmsBytesAll": {
          "type": "string",
          "format": "int64"
        },
        "dbmsBytesLast5min": {
          "type": "string",
          "format": "int64"
        },
        "dbProcInfo": {
          "type": "string"
        },
        "dbProcTook": {
          "type": "integer",
          "format": "int32"
        },
        "dbProcTookAt": {
          "type": "string",
          "format": "date-time"
        },
        "durationAll": {
          "type": "integer",
          "format": "int32"
        },
        "durationAllDbms": {
          "type": "integer",
          "format": "int32"
        },
        "durationCurrent": {
          "type": "integer",
          "format": "int32"
        },
        "durationCurrentDbms": {
          "type": "integer",
          "format": "int32"
        },
        "durationLast5Min": {
          "type": "string",
          "format": "int64"
        },
        "durationLast5MinDbms": {
          "type": "string",
          "format": "int64"
        },
        "host": {
          "type": "string"
        },
        "infobaseId": {
          "type": "string"
        },
        "lastActiveAt": {
          "type": "string",
          "format": "date-time"
        },
        "hibernate": {
          "type": "boolean"
        },
        "passiveSessionHibernateTime": {
          "type": "integer",
          "format": "int32"
        },
        "hibernateSessionTerminateTime": {
          "type": "integer",
          "format": "int32"
        },
        "licenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v8platform.serialize.v1.LicenseInfo"
          }
        },
        "locale": {
          "type": "string"
        },
        "processId": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time"
        },
        "userName": {
          "type": "string"
        },
        "memoryCurrent": {
          "type": "string",
          "format": "int64",
          "title": "version \u003e= 4"
        },
        "memoryLast5min": {
          "type": "string",
          "format": "int64"
        },
        "memoryTotal": {
          "type": "string",
          "format": "int64"
        },
        "readCurrent": {
          "type": "string",
          "format": "int64"
        },
        "readLast5min": {
          "type": "string",
          "format": "int64"
        },
        "readTotal": {
          "type": "string",
          "format": "int64"
        },
        "writeCurrent": {
          "type": "string",
          "format": "int64"
        },
        "writeLast5min": {
          "type": "string",
          "format": "int64"
        },
        "writeTotal": {
          "type": "string",
          "format": "int64"
        },
        "durationCurrentService": {
          "type": "integer",
          "format": "int32",
          "title": "version \u003e= 5"
        },
        "durationLast5minService": {
          "type": "string",
          "format": "int64"
        },
        "durationAllService": {
          "type": "integer",
          "format": "int32"
        },
        "currentServiceName": {
          "type": "string"
        },
        "cpuTimeCurrent": {
          "type": "string",
          "format": "int64",
          "title": "version \u003e= 6"
        },
        "cpuTimeLast5min": {
          "type": "string",
          "format": "int64"
        },
        "cpuTimeTotal": {
          "type": "string",
          "format": "int64"
        },
        "dataSeparation": {
          "type": "string",
          "title": "version \u003e= 7"
        },
        "clientIpAddress": {
          "type": "string",
          "title": "version \u003e= 10"
        },
        "clusterId": {
          "type": "string",
          "title": "ignore"
        }
      }
    }
  },
  "securityDefinitions": {
    "AdminAuth": {
      "type": "apiKey",
      "name": "authorization",
      "in": "header",
      "x-default": "12312312"
    },
    "ClientAuth": {
      "type": "apiKey",
      "name": "x-client",
      "in": "header",
      "x-default": "12312312"
    },
    "UserAuth": {
      "type": "apiKey",
      "name": "authorization",
      "in": "header",
      "x-default": "12312312"
    }
  },
  "security": [
    {
      "ClientAuth": [],
      "UserAuth": []
    }
  ],
  "x-something-something": "yadda"
}
